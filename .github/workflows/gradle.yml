name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set execute permission on gradlew
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew clean build -x test

    - name: docker image build
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/safe-t .

    - name: docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/safe-t

  run-docker-image-on-ec2:
    needs: build-docker-image
    runs-on: ubuntu-latest

    steps:
    - name: Install SSH client
      run: sudo apt-get install -y openssh-client

    - name: Add SSH key
      run: echo "${{ secrets.EC2_SSH_KEY }}" > key.pem && chmod 600 key.pem

    - name: SSH and Run Docker Commands on EC2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.AWS_EC2_IP }} << 'EOF'
          sudo usermod -aG docker $USER
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/safe-t
          sudo docker stop $(sudo docker ps -q) 2>/dev/null || true
          sudo docker run --name safe-t --rm -d -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/safe-t
          sudo docker system prune -f
        EOF
